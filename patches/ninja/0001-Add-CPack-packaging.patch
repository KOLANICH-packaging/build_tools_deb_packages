From dbb355380affca4dd1a186e8da0725413bd4b78c Mon Sep 17 00:00:00 2001
From: KOLANICH <KOLANICH@users.noreply.github.com>
Date: Wed, 27 Nov 2019 18:55:59 +0300
Subject: [PATCH] Add CPack packaging

---
 CMakeLists.txt                        | 156 +++++++++++++++++++++++++-
 doc/CPack.ninja-build.description.txt |   2 +
 2 files changed, 155 insertions(+), 3 deletions(-)
 create mode 100644 doc/CPack.ninja-build.description.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 60fd8a1..ad28062 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,6 +15,8 @@ if(CMAKE_BUILD_TYPE MATCHES "Release")
 	endif()
 endif()
 
+option(SEPARATE_LIBNINJA OFF)
+
 if(MSVC)
 	set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /GR- /Zc:__cplusplus")
@@ -38,9 +40,16 @@ else()
 	add_library(libninja-re2c OBJECT src/depfile_parser.cc src/lexer.cc)
 endif()
 target_include_directories(libninja-re2c PRIVATE src)
+set_target_properties(libninja-re2c PROPERTIES PREFIX "")
+
+if(SEPARATE_LIBNINJA)
+	set(LIBNINJA_MODULE_TYPE "SHARED")
+else()
+	set(LIBNINJA_MODULE_TYPE "STATIC")
+endif()
 
 # Core source files all build into ninja library.
-add_library(libninja OBJECT
+add_library(libninja "${LIBNINJA_MODULE_TYPE}"
 	src/build_log.cc
 	src/build.cc
 	src/clean.cc
@@ -63,6 +72,9 @@ add_library(libninja OBJECT
 	src/util.cc
 	src/version.cc
 )
+target_link_libraries(libninja libninja-re2c)
+set_target_properties(libninja PROPERTIES PREFIX "")
+
 if(WIN32)
 	target_sources(libninja PRIVATE
 		src/subprocess-win32.cc
@@ -85,7 +97,7 @@ endif()
 
 # Main executable is library plus main() function.
 add_executable(ninja src/ninja.cc)
-target_link_libraries(ninja PRIVATE libninja libninja-re2c)
+target_link_libraries(ninja PRIVATE libninja)
 
 # Tests all build into ninja_test executable.
 add_executable(ninja_test
@@ -111,7 +123,7 @@ add_executable(ninja_test
 if(WIN32)
 	target_sources(ninja_test PRIVATE src/includes_normalize_test.cc src/msvc_helper_test.cc)
 endif()
-target_link_libraries(ninja_test PRIVATE libninja libninja-re2c)
+target_link_libraries(ninja_test PRIVATE libninja)
 
 foreach(perftest
   build_log_perftest
@@ -127,3 +139,141 @@ endforeach()
 
 enable_testing()
 add_test(NinjaTest ninja_test)
+
+set(CPACK_PACKAGE_NAME "ninja-build")
+set(CPACK_PACKAGE_VERSION_MAJOR "1")
+set(CPACK_PACKAGE_VERSION_MINOR "9")
+set(CPACK_PACKAGE_VERSION_PATCH "0")
+
+set(CPACK_PACKAGE_VENDOR "https://github.com/ninja-build/ninja contributors")
+set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Ninja is a small build system with a focus on speed. It differs from other build systems in two major respects: it is designed to have its input files generated by a higher-level build system, and it is designed to run builds as fast as possible.")
+set(CPACK_PACKAGE_HOMEPAGE_URL "https://ninja-build.org/")
+set(CPACK_PACKAGE_CONTACT "https://github.com/ninja-build/ninja")
+set(CPACK_PACKAGE_CHECKSUM "SHA512")
+set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
+set(CPACK_GENERATOR "DEB")
+set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/doc/CPack.ninja-build.description.txt") # from https://salsa.debian.org/debian/ninja-build/raw/master/debian/control, copyright by Felix Geyer <fgeyer@debian.org> (https://salsa.debian.org/fgeyer)
+
+
+include(CPackComponent)
+set("CPACK_DEBIAN_COMPRESSION_TYPE" "xz")
+set("CPACK_COMPONENTS_GROUPING" "IGNORE")
+
+cpack_add_component("bin")
+cpack_add_component("test")
+
+cpack_add_component_group("misc"
+	EXPANDED
+)
+
+cpack_add_component_group("completions"
+	DISPLAY_NAME "Shell completions"
+	DESCRIPTION "Provides completions for different shells"
+	PARENT_GROUP "misc"
+	EXPANDED
+)
+cpack_add_component_group("syntax"
+	DISPLAY_NAME "Syntax highlighting"
+	DESCRIPTION "Provides syntax highlighting for different editors"
+	PARENT_GROUP "misc"
+	EXPANDED
+)
+
+cpack_add_component("zsh"
+	DISPLAY_NAME "zsh completions"
+	GROUP "completions"
+)
+cpack_add_component("bash"
+	DISPLAY_NAME "bash completions"
+	GROUP "completions"
+)
+cpack_add_component("vim"
+	DISPLAY_NAME "vim syntax"
+	GROUP "syntax"
+)
+cpack_add_component("emacs"
+	DISPLAY_NAME "emacs syntax"
+	GROUP "syntax"
+)
+
+
+if(SEPARATE_LIBNINJA)
+	cpack_add_component("lib")
+	install(TARGETS libninja libninja-re2c ninja
+		LIBRARY
+		COMPONENT "lib"
+	)
+	set("CPACK_DEBIAN_LIB_PACKAGE_NAME" "libninjabuild")
+	set("CPACK_COMPONENT_LIB_DISPLAY_NAME" "libninja")
+	set("CPACK_COMPONENT_LIB_REQUIRED" TRUE)
+	set(DEPENDS_ON_LIBNINJA ", ${CPACK_DEBIAN_LIB_PACKAGE_NAME}")
+
+	cpack_add_component("dev"
+		DEPENDS "lib"
+	)
+	install(TARGETS libninja libninja-re2c
+		PUBLIC_HEADER ARCHIVE
+		COMPONENT "dev"
+	)
+	set(CPACK_COMPONENT_BIN_DEPENDS "lib")
+	set(CPACK_COMPONENT_TEST_DEPENDS "lib")
+else()
+	set(DEPENDS_ON_LIBNINJA "")
+endif()
+
+
+install(TARGETS ninja
+	RUNTIME
+	COMPONENT "bin"
+)
+
+# install rules from https://salsa.debian.org/debian/ninja-build/raw/master/debian/ninja-build.install, copyright by Felix Geyer <fgeyer@debian.org> (https://salsa.debian.org/fgeyer)
+install(PROGRAMS "${CMAKE_SOURCE_DIR}/misc/bash-completion"
+	DESTINATION "${CMAKE_INSTALL_PREFIX}/share/bash-completion/completions/"
+	COMPONENT "bash"
+)
+install(FILES "${CMAKE_SOURCE_DIR}/misc/ninja-mode.el"
+	DESTINATION "${CMAKE_INSTALL_PREFIX}/share/emacs/site-lisp/"
+	COMPONENT "emacs"
+)
+install(FILES "${CMAKE_SOURCE_DIR}/misc/ninja.vim"
+	DESTINATION "${CMAKE_INSTALL_PREFIX}/share/vim/addons/syntax/"
+	COMPONENT "vim"
+)
+install(FILES "${CMAKE_SOURCE_DIR}/misc/zsh-completion"
+	DESTINATION "${CMAKE_INSTALL_PREFIX}/share/zsh/vendor-completions/"
+	COMPONENT "zsh"
+)
+
+
+install(TARGETS ninja_test
+	RUNTIME
+	COMPONENT "test"
+)
+
+set(CPACK_RPM_COMPONENT_INSTALL ON)
+set(CPACK_DEB_COMPONENT_INSTALL ON)
+
+set("CPACK_DEBIAN_PACKAGE_NAME" "${CPACK_PACKAGE_NAME}")
+set("DEBIAN_PACKAGE_DEPENDS" "libc6 (>= 2.15), libstdc++6 (>= 5.2)")
+
+set("CPACK_DEBIAN_VIM_PACKAGE_NAME" "vim-ninja-build")
+set("CPACK_DEBIAN_EMACS_PACKAGE_NAME" "ninja-build-emacs")
+set("CPACK_DEBIAN_ZSH_PACKAGE_NAME" "zsh-ninja-build")
+set("CPACK_DEBIAN_BASH_PACKAGE_NAME" "ninja-build-bash-completion")
+
+set("CPACK_DEBIAN_BIN_PACKAGE_NAME" "ninja-build")
+set("CPACK_COMPONENT_BIN_DISPLAY_NAME" "ninja binary")
+set("CPACK_DEBIAN_BIN_PACKAGE_ENHANCES" "cmake, kati")
+set("CPACK_DEBIAN_BIN_PACKAGE_DEPENDS" "${DEBIAN_PACKAGE_DEPENDS}${DEPENDS_ON_LIBNINJA}")
+set("CPACK_DEBIAN_BIN_PACKAGE_RECOMMENDS" "${CPACK_DEBIAN_VIM_PACKAGE_NAME}, ${CPACK_DEBIAN_EMACS_PACKAGE_NAME}, ${CPACK_DEBIAN_ZSH_PACKAGE_NAME}, ${CPACK_DEBIAN_BASH_PACKAGE_NAME}")
+
+set("CPACK_DEBIAN_TEST_PACKAGE_NAME" "ninja-build-test")
+set("CPACK_COMPONENT_TEST_DISPLAY_NAME" "A test for ninja")
+set("CPACK_COMPONENT_TEST_DISABLED" TRUE)
+set("CPACK_DEBIAN_TEST_PACKAGE_DEPENDS" "${DEBIAN_PACKAGE_DEPENDS}${DEPENDS_ON_LIBNINJA}")
+
+get_cmake_property(CPACK_COMPONENTS_ALL COMPONENTS)
+list(REMOVE_ITEM CPACK_COMPONENTS_ALL "test" "Unspecified")
+
+include(CPack)
diff --git a/doc/CPack.ninja-build.description.txt b/doc/CPack.ninja-build.description.txt
new file mode 100644
index 0000000..f6968a5
--- /dev/null
+++ b/doc/CPack.ninja-build.description.txt
@@ -0,0 +1,2 @@
+Ninja is yet another build system. It takes as input the interdependencies of files (typically source code and output executables) and orchestrates building them, quickly.
+Ninja joins a sea of other build systems. Its distinguishing goal is to be fast. It is born from the Chromium browser project, which has over 30,000 source files and whose other build systems can take ten seconds to start building after changing one file. Ninja is under a second.
-- 
2.20.1

